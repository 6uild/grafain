syntax = "proto3";

package escrow;

import "codec.proto";
import "coin/codec.proto";
import "gogoproto/gogo.proto";

// Escrow holds some coins.
// The arbiter or source can release them to the destination.
// The destination can return them to the source.
// Upon timeout, they will be returned to the source.
message Escrow {
  weave.Metadata metadata = 1;
  bytes source = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes destination = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  // If unreleased before timeout, escrow will return to source.
  // Timeout represents wall clock time as read from the block header. Timeout
  // is represented using POSIX time format.
  // Expiration time is inclusive meaning that the escrow expires as soon as
  // the current time is equal or greater than timeout value.
  // nonexpired: [created, timeout)
  // expired: [timeout, infinity)
  int64 timeout = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
  // max length 128 character
  string memo = 6;
  // Address of this entity. Set during creation and does not change.
  bytes address = 7 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
}

// CreateMsg is a request to create an Escrow with some tokens.
// If source is not defined, it defaults to the first signer
// The rest must be defined
message CreateMsg {
  weave.Metadata metadata = 1;
  bytes source = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes destination = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  // amount may contain multiple token types
  repeated coin.Coin amount = 5;
  // Timeout represents wall clock time.
  int64 timeout = 6 [(gogoproto.casttype) = "github.com/iov-one/weave.UnixTime"];
  // max length 128 character
  string memo = 7;
}

// ReleaseMsg releases the content to the destination.
// Must be authorized by source or arbiter.
// If amount not provided, defaults to entire escrow,
// May be a subset of the current balance.
message ReleaseMsg {
  weave.Metadata metadata = 1;
  bytes escrow_id = 2;
  repeated coin.Coin amount = 3;
}

// ReturnMsg returns the content to the source.
// Must be authorized by the source or an expired timeout
message ReturnMsg {
  weave.Metadata metadata = 1;
  bytes escrow_id = 2;
}

// UpdatePartiesMsg changes any of the parties of the escrow:
// source, arbiter, destination. This must be authorized by the current
// holder of that position (eg. only source can update source).
//
// Represents delegating responsibility
message UpdatePartiesMsg {
  weave.Metadata metadata = 1;
  bytes escrow_id = 2;
  bytes source = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes arbiter = 4 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes destination = 5 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
}
