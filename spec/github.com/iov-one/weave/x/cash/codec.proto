syntax = "proto3";

package cash;

import "codec.proto";
import "coin/codec.proto";
import "gogoproto/gogo.proto";

// Set may contain Coin of many different currencies.
// It handles adding and subtracting sets of currencies.
message Set {
  weave.Metadata metadata = 1;
  repeated coin.Coin coins = 2;
}

// SendMsg is a request to move these coins from the given
// source to the given destination address.
// memo is an optional human-readable message
// ref is optional binary data, that can refer to another
// eg. tx hash
message SendMsg {
  weave.Metadata metadata = 1;
  bytes source = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes destination = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  coin.Coin amount = 4;
  // max length 128 character
  string memo = 5;
  // max length 64 bytes
  bytes ref = 6;
}

// FeeInfo records who pays what fees to have this
// message processed
message FeeInfo {
  bytes payer = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  coin.Coin fees = 3;
}

message Configuration {
  weave.Metadata metadata = 1;
  // Owner is present to implement gconf.OwnedConfig interface
  // This defines the Address that is allowed to update the Configuration object and is
  // needed to make use of gconf.NewUpdateConfigurationHandler
  bytes owner = 2 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  bytes collector_address = 3 [(gogoproto.casttype) = "github.com/iov-one/weave.Address"];
  coin.Coin minimal_fee = 4 [(gogoproto.nullable) = false];
}

message UpdateConfigurationMsg {
  weave.Metadata metadata = 1;
  Configuration patch = 2;
}
